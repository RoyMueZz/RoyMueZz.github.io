<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>好记性不如烂键盘</title>
  
  <subtitle>Keyboard beyond the memory</subtitle>
  <link href="/RoyMueZz.github.io/atom.xml" rel="self"/>
  
  <link href="https://www.miaohanzhong.cn/"/>
  <updated>2019-09-23T15:41:58.214Z</updated>
  <id>https://www.miaohanzhong.cn/</id>
  
  <author>
    <name>makotoButoMiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git</title>
    <link href="https://www.miaohanzhong.cn/git.html"/>
    <id>https://www.miaohanzhong.cn/git.html</id>
    <published>2019-09-21T11:27:56.000Z</published>
    <updated>2019-09-23T15:41:58.214Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><h4 id="分支的命令"><a href="#分支的命令" class="headerlink" title="分支的命令"></a>分支的命令</h4><ul><li>查看本地分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><ul><li>查看远程分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><ul><li>查看远程分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><ul><li>创建分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch (名字)</span><br></pre></td></tr></table></figure><ul><li>切换到新创建的分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout (名字)</span><br></pre></td></tr></table></figure><ul><li>将新分支push到github</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin (名字)</span><br></pre></td></tr></table></figure><ul><li>删除本地分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D (名字)</span><br></pre></td></tr></table></figure><ul><li>删除远程分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete (名字)</span><br></pre></td></tr></table></figure><h4 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h4><p>当在某个分支开发完功能之后测试无误之后，想合并到主分支上</p><ul><li>本地切换回主分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout (主分支的名字)</span><br></pre></td></tr></table></figure><ul><li>合并分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge origin/(其他分支的名字)</span><br></pre></td></tr></table></figure><ul><li>推送远程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分支&quot;&gt;&lt;a href=&quot;#分支&quot; class=&quot;headerlink&quot; title=&quot;分支&quot;&gt;&lt;/a&gt;分支&lt;/h3&gt;&lt;h4 id=&quot;分支的命令&quot;&gt;&lt;a href=&quot;#分支的命令&quot; class=&quot;headerlink&quot; title=&quot;分支的命令&quot;&gt;&lt;/a&gt;分支的命
      
    
    </summary>
    
    
      <category term="git" scheme="https://www.miaohanzhong.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>webpack</title>
    <link href="https://www.miaohanzhong.cn/webpack.html"/>
    <id>https://www.miaohanzhong.cn/webpack.html</id>
    <published>2019-09-14T11:46:15.000Z</published>
    <updated>2019-09-15T05:49:26.217Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note info"><p style="font-weight:bold;"></p></div>   --><a id="more"></a><div class="note info"><p style="font-weight:bold;">webpack 是一个现代 JavaScript 应用程序的静态模块打包工具：它做的事情是，分析你的项目结构，找到 JavaScript 模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript 等），并生成一个或多个 bundle，将其打包为合适的格式以供浏览器使用。</p></div><h3 id="webpack-的配置文件"><a href="#webpack-的配置文件" class="headerlink" title="webpack 的配置文件"></a>webpack 的配置文件</h3><p>在项目根目录下创建 webpack.config.js 文件，这是 webpack 默认配置文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//默认是production，打包的文件默认被压缩。开发时可以设置为development，不被压缩</span></span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  <span class="comment">//打包项目的入口文件</span></span><br><span class="line">  entry: <span class="string">'./index.js'</span>,</span><br><span class="line">  <span class="comment">//打包项目的输出文件</span></span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">//自定义打包输出文件名</span></span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    <span class="comment">//输出文件的绝对路径</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'bundle'</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h3><h4 id="file-loader"><a href="#file-loader" class="headerlink" title="file-loader"></a>file-loader</h4><p><strong>支持加载图片文件:</strong> <a href="https://webpack.js.org/loaders/file-loader/" target="_blank" rel="noopener">file-loader</a> 解决 CSS 等文件中的引入图片路径问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install file-loader -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js  配置loader</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//配置模块,主要用来配置不同文件的加载器</span></span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    <span class="comment">//配置模块规则</span></span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif)$/</span>, <span class="comment">//正则匹配要使用相应loader的文件  test: /\.(eot|ttf|svg|woff)$/, // 引入字体图标的loader</span></span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'file-loader'</span>, <span class="comment">//要用到的loader</span></span><br><span class="line">            options: &#123;</span><br><span class="line">              <span class="comment">//palceholder占位符</span></span><br><span class="line">              name: <span class="string">'[name].[ext]'</span>, <span class="comment">//打包后的图片名字，后缀和打包的之前的图片一样</span></span><br><span class="line">              outputPath: <span class="string">'images/'</span>, <span class="comment">//图片打包后的地址</span></span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="url-loader"><a href="#url-loader" class="headerlink" title="url-loader"></a>url-loader</h4><p><strong>将小图片转换成 base64 格式:</strong> <a href="https://webpack.js.org/loaders/url-loader/" target="_blank" rel="noopener">url-loader</a> 当图片小于 limit 的时候会把图片 BASE64 编码，大于 limit 参数的时候还是使用 file-loader 进行拷贝(file-loader 能做的 url-loader 也能做)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install url-loader -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js  配置loader</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif|bmp/</span>)$/i,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'url-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              name:<span class="string">'[name].[ext]'</span>,</span><br><span class="line">              outputPath: <span class="string">'images/'</span>,</span><br><span class="line">              limit: <span class="number">8192</span> <span class="comment">//小于8192b,就可以转化成base64格式。大于就会打包成文件格式</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="css-loader-style-loader"><a href="#css-loader-style-loader" class="headerlink" title="css-loader style-loader"></a>css-loader style-loader</h4><p><strong>支持加载样式 CSS 文件:</strong> <code>css-loader style-loader</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install css-loader style-loader -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js  配置loader</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>, <span class="comment">//匹配以css为后缀的文件</span></span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>], <span class="comment">//loader的执行顺序是从右向左，从下到上。css-loader：分析几个css文件之间的关系，最终合并为一个css。style-loader:在得到css生成的内容时，把其挂载到html的head里，成为内联样式。</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="sass-loader-node-sass"><a href="#sass-loader-node-sass" class="headerlink" title="sass-loader node-sass"></a>sass-loader node-sass</h4><p><strong>支持加载样式 SASS 文件:</strong> <code>sass-loader node-sass</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install sass-loader node-sass -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js  配置loader</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                <span class="string">"style-loader"</span>, <span class="comment">// 将 JS 字符串生成为 style 节点</span></span><br><span class="line">                <span class="string">"css-loader"</span>, <span class="comment">// 将 CSS 转化成 CommonJS 模块</span></span><br><span class="line">                <span class="string">"sass-loader"</span> <span class="comment">// 将 Sass 编译成 CSS，默认使用 Node Sass</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="postcss-loader-autoprefixer"><a href="#postcss-loader-autoprefixer" class="headerlink" title="postcss-loader autoprefixer"></a>postcss-loader autoprefixer</h4><p>为了浏览器的兼容性，有时候我们必须加入-webkit,-ms,-o,-moz 这些前缀</p><ul><li>Trident 内核：主要代表为 IE 浏览器, 前缀为-ms</li><li>Gecko 内核：主要代表为 Firefox, 前缀为-moz</li><li>Presto 内核：主要代表为 Opera, 前缀为-o</li><li>Webkit 内核：产要代表为 Chrome 和 Safari, 前缀为-webkit</li></ul><p><strong>为 css 样式属性加不同浏览器的前缀:</strong> <code>postcss-loader autoprefixer</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i postcss-loader autoprefixer -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在项目跟目录下创建 postcss.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  plugins: [<span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js  配置loader</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                <span class="string">"style-loader"</span>, <span class="comment">// 将 JS 字符串生成为 style 节点</span></span><br><span class="line">                <span class="string">"css-loader"</span>, <span class="comment">// 将 CSS 转化成 CommonJS 模块</span></span><br><span class="line">                <span class="string">'postcss-loader'</span>,<span class="comment">//注意postcss-loader放置位置，应放在css-loader之后，sass|less|stylus-loader之前。</span></span><br><span class="line">                <span class="string">"sass-loader"</span> <span class="comment">// 将 Sass 编译成 CSS，默认使用 Node Sass</span></span><br><span class="line"></span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给loader加一些配置项：</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [&#123;</span><br><span class="line">            test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                <span class="string">"style-loader"</span>,</span><br><span class="line">                &#123;</span><br><span class="line">                 loader: <span class="string">"css-loader"</span>,</span><br><span class="line">                    options:&#123;</span><br><span class="line">                        importLoaders:<span class="number">2</span> ,<span class="comment">//如果sass文件里还引入了另外一个sass文件，另一个文件还会从sass-loader向上解析。如果不加，就直接从css-loader开始解析// 0 =&gt; no loaders (default); 1 =&gt; postcss-loader; 2 =&gt; postcss-loader, sass-loader</span></span><br><span class="line">                        modules: <span class="literal">true</span> <span class="comment">//开启css的模块打包。css样式不会和其他模块发生耦合和冲突</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">'postcss-loader'</span>,</span><br><span class="line">                <span class="string">"sass-loader"</span>,</span><br><span class="line"></span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h3><div class="note info"><p style="font-weight:bold;">可以在webpack运行到某个时刻的时候，帮你做一些事情(类似于生命周期函数)</p></div>  <h4 id="pHtmlWebpackPlugin"><a href="#pHtmlWebpackPlugin" class="headerlink" title="pHtmlWebpackPlugin"></a>pHtmlWebpackPlugin</h4><p><code>pHtmlWebpackPlugin:</code> 会在打包结束后，自动生成一个 html 文件，并把打包生成的 js 自动引入到这个 html 文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'./dist'</span>),</span><br><span class="line">    filename: <span class="string">'index_bundle.js'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="comment">// 默认生成的index.html中没有元素，假如想生成文件的同时在里面创建一个id为root的div，可以在项目的文件夹下(比如src)创建index.html模板，以index.html为模板，把打包生成的js自动引入到这个html文件中</span></span><br><span class="line">      template: <span class="string">'src/index.html'</span>, </span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CleanWebpackPlugin"><a href="#CleanWebpackPlugin" class="headerlink" title="CleanWebpackPlugin"></a>CleanWebpackPlugin</h4><p><code>CleanWebpackPlugin:</code> 自动清除上一次打包的dist文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i clean-webpack-plugin -D</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CleanWebpackPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'index.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'./dist'</span>),</span><br><span class="line">    filename: <span class="string">'index_bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">        template: <span class="string">'src/index.html'</span> <span class="comment">//在打包之后，以.html为模板，把打包生成的js自动引入到这个html文件中</span></span><br><span class="line">    &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin([<span class="string">'dist'</span>]), <span class="comment">// 在打包之前，可以删除dist文件夹下的所有内容</span></span><br><span class="line">    </span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Entry与Output的基础配置"><a href="#Entry与Output的基础配置" class="headerlink" title="Entry与Output的基础配置"></a>Entry与Output的基础配置</h3><p><code>Entry与Output的基础配置:</code> 在打包多入口文件时的配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CleanWebpackPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">   main: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    sub: <span class="string">'./src/index.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    publicPath: <span class="string">'http://cdn.com.cn'</span>, <span class="comment">//将注入到html中的js文件前面加上地址</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'[name].js'</span> <span class="comment">// 通过占位符输出2个文件</span></span><br><span class="line">  &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">        template: <span class="string">'src/index.html'</span> <span class="comment">//在打包之后，以.html为模板，把打包生成的js自动引入到这个html文件中</span></span><br><span class="line">    &#125;),</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin([<span class="string">'dist'</span>]), <span class="comment">// 在打包之前，可以删除dist文件夹下的所有内容</span></span><br><span class="line">    </span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="SourceMap-的配置"><a href="#SourceMap-的配置" class="headerlink" title="SourceMap 的配置"></a>SourceMap 的配置</h3><p><code>SourceMap:</code> 打包编译后的文件和源文件的映射关系，用于开发者调试用  <a href="https://webpack.js.org/configuration/devtool/" target="_blank" rel="noopener">devtool</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CleanWebpackPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">mode: <span class="string">'development'</span>,</span><br><span class="line">    devtool: <span class="string">'cheap-module-eval-source-map'</span>,</span><br><span class="line">    <span class="comment">//devtool:'none', 在开发者模式下，默认开启sourcemap,将其关闭</span></span><br><span class="line">    <span class="comment">//devtool:'source-map' 开启映射打包会变慢</span></span><br><span class="line">    <span class="comment">//devtool:'inline-source-map' 不单独生成.map文件，会将生成的映射文件以base64的形式插入到打包后的js文件的底部</span></span><br><span class="line">    <span class="comment">//devtool:'cheap-inline-source-map' 代码出错提示不用精确显示第几行的第几个字符出错，只显示第几行出错，会提高一些性能</span></span><br><span class="line">    <span class="comment">//devtool:'cheap-module-inline-source-map' 不仅管自己的业务代码出错，也管第三方模块和loader的一些报错</span></span><br><span class="line">    <span class="comment">//devtool:'eval' 执行效率最快，性能最好，但是针对比较复杂的代码的情况下，提示内容不全面</span></span><br><span class="line">    <span class="comment">//devtool: 'cheap-module-eval-source-map', 在开发环境推荐使用，提示比较全，打包速度比较快</span></span><br><span class="line">    <span class="comment">//devtool: 'cheap-module-source-map', 在生产环境中推荐使用，提示效果会好一些</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">entry: &#123;</span><br><span class="line">main: <span class="string">'./src/index.js'</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: [&#123;</span><br><span class="line">test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">use: &#123;</span><br><span class="line">loader: <span class="string">'url-loader'</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">name: <span class="string">'[name]_[hash].[ext]'</span>,</span><br><span class="line">outputPath: <span class="string">'images/'</span>,</span><br><span class="line">limit: <span class="number">10240</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;, &#123;</span><br><span class="line">test: <span class="regexp">/\.(eot|ttf|svg)$/</span>,</span><br><span class="line">use: &#123;</span><br><span class="line">loader: <span class="string">'file-loader'</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;, &#123;</span><br><span class="line">test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">use: [</span><br><span class="line"><span class="string">'style-loader'</span>, </span><br><span class="line">&#123;</span><br><span class="line">loader: <span class="string">'css-loader'</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">importLoaders: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">        <span class="string">'postcss-loader'</span>,</span><br><span class="line"><span class="string">'sass-loader'</span>,</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line">&#125;,</span><br><span class="line">plugins: [<span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">template: <span class="string">'src/index.html'</span></span><br><span class="line">&#125;), <span class="keyword">new</span> CleanWebpackPlugin([<span class="string">'dist'</span>])],</span><br><span class="line">output: &#123;</span><br><span class="line">filename: <span class="string">'[name].js'</span>,</span><br><span class="line">path: path.resolve(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-WebpackDevServer-提升开发效率"><a href="#使用-WebpackDevServer-提升开发效率" class="headerlink" title="使用 WebpackDevServer 提升开发效率"></a>使用 WebpackDevServer 提升开发效率</h3><p><code>WebpackDevServer:</code> 解决每次在src里编写完代码都需要手动重新运行 npm run dev</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"haiyang"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"bundle"</span>: <span class="string">"webpack"</span>,</span><br><span class="line">    "watch": "webpack --watch",// 加--watch自动监听代码的变化</span><br><span class="line">    "start": "webpack-dev-server",//配置热更新</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server –D</span><br></pre></td></tr></table></figure><ul><li>contentBase :配置开发服务运行时的文件根目录</li><li>open :自动打开浏览器</li><li>host：开发服务器监听的主机地址</li><li>compress :开发服务器是否启动gzip等压缩</li><li>port：开发服务器监听的端口</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CleanWebpackPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">mode: <span class="string">'development'</span>,</span><br><span class="line">devtool: <span class="string">'cheap-module-eval-source-map'</span>,</span><br><span class="line">entry: &#123;</span><br><span class="line">main: <span class="string">'./src/index.js'</span></span><br><span class="line">&#125;,</span><br><span class="line">+devServer: &#123;</span><br><span class="line">contentBase: <span class="string">'./dist'</span>,</span><br><span class="line">open: <span class="literal">true</span>,</span><br><span class="line">port: <span class="number">8080</span>,</span><br><span class="line">    proxy: &#123;<span class="comment">//配置跨域，访问的域名会被代理到本地的3000端口</span></span><br><span class="line">      <span class="string">'/api'</span>: <span class="string">'http://localhost:3000'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: []</span><br><span class="line">&#125;,</span><br><span class="line">plugins: [],</span><br><span class="line">output: &#123;</span><br><span class="line">filename: <span class="string">'[name].js'</span>,</span><br><span class="line">path: path.resolve(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模块热替换-hot-module-replacement"><a href="#模块热替换-hot-module-replacement" class="headerlink" title="模块热替换(hot module replacement)"></a>模块热替换(hot module replacement)</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"haiyang"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"webpack-dev-server"</span> //将文件打包到内存中，有助于开发</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CleanWebpackPlugin = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">mode: <span class="string">'development'</span>,</span><br><span class="line">devtool: <span class="string">'cheap-module-eval-source-map'</span>,</span><br><span class="line">entry: &#123;</span><br><span class="line">main: <span class="string">'./src/index.js'</span></span><br><span class="line">&#125;,</span><br><span class="line">devServer: &#123;</span><br><span class="line">contentBase: <span class="string">'./dist'</span>,</span><br><span class="line">open: <span class="literal">true</span>,</span><br><span class="line">port: <span class="number">8080</span>,</span><br><span class="line">hot: <span class="literal">true</span>,<span class="comment">//开启热更新</span></span><br><span class="line">hotOnly: <span class="literal">true</span><span class="comment">//尽管html功能没有实现，也不让浏览器刷新</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">rules: [&#123;</span><br><span class="line">test: <span class="regexp">/\.(jpg|png|gif)$/</span>,</span><br><span class="line">use: &#123;</span><br><span class="line">loader: <span class="string">'url-loader'</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">name: <span class="string">'[name]_[hash].[ext]'</span>,</span><br><span class="line">outputPath: <span class="string">'images/'</span>,</span><br><span class="line">limit: <span class="number">10240</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;, &#123;</span><br><span class="line">test: <span class="regexp">/\.(eot|ttf|svg)$/</span>,</span><br><span class="line">use: &#123;</span><br><span class="line">loader: <span class="string">'file-loader'</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;, &#123;</span><br><span class="line">test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">use: [</span><br><span class="line"><span class="string">'style-loader'</span>, </span><br><span class="line">&#123;</span><br><span class="line">loader: <span class="string">'css-loader'</span>,</span><br><span class="line">options: &#123;</span><br><span class="line">importLoaders: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">        <span class="string">'postcss-loader'</span>,</span><br><span class="line"><span class="string">'sass-loader'</span>,</span><br><span class="line"></span><br><span class="line">]</span><br><span class="line">&#125;, &#123;</span><br><span class="line">test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">use: [</span><br><span class="line"><span class="string">'style-loader'</span>,</span><br><span class="line"><span class="string">'css-loader'</span>,</span><br><span class="line"><span class="string">'postcss-loader'</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line">&#125;,</span><br><span class="line">plugins: [</span><br><span class="line"><span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">template: <span class="string">'src/index.html'</span></span><br><span class="line">&#125;), </span><br><span class="line"><span class="keyword">new</span> CleanWebpackPlugin([<span class="string">'dist'</span>]),</span><br><span class="line"><span class="keyword">new</span> webpack.HotModuleReplacementPlugin() <span class="comment">//使用模块热更新插件</span></span><br><span class="line">],</span><br><span class="line">output: &#123;</span><br><span class="line">filename: <span class="string">'[name].js'</span>,</span><br><span class="line">path: path.resolve(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="comment">//如果模块启用了HMR，就可以用 module.hot.accept(),监听模块的更新。</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">module</span>.hot) &#123;</span><br><span class="line">  <span class="built_in">module</span>.hot.accept(<span class="string">'./library.js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 使用更新过的 library 模块执行某些操作...</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger"><p style="font-weight:bold;">注意点</p><p>   引入css,用框架Vue，React 时，不需要写 module.hot.accept()，因为在使用css-loader，vue-loader，babel-preset时，就已经配置好了HMR，不需要自己写</p><p></p></div><h3 id="使用-Babel-处理-ES6-7-语法-转义为ES5"><a href="#使用-Babel-处理-ES6-7-语法-转义为ES5" class="headerlink" title="使用 Babel 处理 ES6/7 语法 转义为ES5"></a>使用 Babel 处理 ES6/7 语法 转义为ES5</h3><p><a href="https://babeljs.io/setup" target="_blank" rel="noopener">BABEL官网</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-loader @babel/core @babel/preset-env -D</span><br><span class="line">//生产依赖，兼容低版本浏览器</span><br><span class="line">npm install --save @babel/polyfill</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">     exclude: <span class="regexp">/node_modules/</span>,<span class="comment">//不需要对第三方模块进行转换，耗费性能</span></span><br><span class="line">     loader: <span class="string">"babel-loader"</span> ,</span><br><span class="line">        options:&#123;</span><br><span class="line">            <span class="string">"presets"</span>: [[<span class="string">"@babel/preset-env"</span>,&#123;</span><br><span class="line">                targets: &#123;<span class="comment">//这个项目运行在大于什么版本的浏览器上，已经支持es6的语法的高版本浏览器就不需要转义成es5了</span></span><br><span class="line">                    edge: <span class="string">"17"</span>,</span><br><span class="line">                    firefox: <span class="string">"60"</span>,</span><br><span class="line">                    chrome: <span class="string">"67"</span>,</span><br><span class="line">                    safari: <span class="string">"11.1"</span>,</span><br><span class="line">                  &#125;,</span><br><span class="line">                useBuiltIns:<span class="string">'usage'</span> <span class="comment">//按需添加polyfill,把用到的代码都转成低版本浏览器兼容的</span></span><br><span class="line">            &#125;]]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在业务代码运行之前最顶部导入</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"@babel/polyfill"</span>;</span><br></pre></td></tr></table></figure><div class="note danger"><p style="font-weight:bold;">注意点</p><p>   在开发类库，第三方模块或组件库时不能用 @babel/polyfill 这种方案，因为会把声明的变量变成全局变量，会污染全局环境</p><p></p></div><ul><li>解决的方法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @babel/plugin-transform-runtime</span><br><span class="line">npm install --save @babel/runtime</span><br><span class="line">npm install --save @babel/runtime-corejs2</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">     exclude: <span class="regexp">/node_modules/</span>,<span class="comment">//不需要对第三方模块进行转换，耗费性能</span></span><br><span class="line">     loader: <span class="string">"babel-loader"</span> ,</span><br><span class="line">        options:&#123;</span><br><span class="line">            <span class="string">"plugins"</span>: [[<span class="string">"@babel/plugin-transform-runtime"</span>,&#123;</span><br><span class="line">                <span class="string">"corejs"</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="string">"helpers"</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">"regenerator"</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="string">"useESModules"</span>: <span class="literal">false</span></span><br><span class="line">            &#125;]]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>由于babel需要配置的内容非常多，我们需要在项目根目录下创建一个 <code>.babelrc</code> 文件。就不需要在 webpack.config.js 中写 babel 的配置了。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    <span class="string">"plugins"</span>: [[<span class="string">"@babel/plugin-transform-runtime"</span>,&#123;</span><br><span class="line">        <span class="string">"corejs"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">"helpers"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"regenerator"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"useESModules"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-React-代码的打包"><a href="#配置-React-代码的打包" class="headerlink" title="配置 React 代码的打包"></a>配置 React 代码的打包</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i react react-dom --save</span><br><span class="line">npm install --save-dev @babel/preset-react</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// .babelrc</span></span><br><span class="line"> &#123; </span><br><span class="line">      <span class="string">"presets"</span>: [</span><br><span class="line">          [<span class="string">"@babel/preset-env"</span>,&#123;</span><br><span class="line">          targets: &#123;</span><br><span class="line">              edge: <span class="string">"17"</span>,</span><br><span class="line">              firefox: <span class="string">"60"</span>,</span><br><span class="line">              chrome: <span class="string">"67"</span>,</span><br><span class="line">              safari: <span class="string">"11.1"</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          useBuiltIns:<span class="string">'usage'</span> </span><br><span class="line">      &#125;</span><br><span class="line">          ],</span><br><span class="line">          <span class="string">"@babel/preset-react"</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//执行顺序：从下往上，从右向左的顺序</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note info&quot;&gt;&lt;p style=&quot;font-weight:bold;&quot;&gt;&lt;/p&gt;&lt;/div&gt;   --&gt;
    
    </summary>
    
      <category term="前端" scheme="https://www.miaohanzhong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="webpack" scheme="https://www.miaohanzhong.cn/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>settings Sync</title>
    <link href="https://www.miaohanzhong.cn/settings-Sync.html"/>
    <id>https://www.miaohanzhong.cn/settings-Sync.html</id>
    <published>2019-09-12T16:39:35.000Z</published>
    <updated>2019-09-14T10:59:51.674Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note info"><p style="font-weight:bold;"></p></div>   --><a id="more"></a><div class="note info"><p style="font-weight:bold;">如果要在不同的电脑上使用 vscode 配置是件比较麻烦的事情，使用 Settings Sync 将 vscode 配置备份起来，当需要在其他电脑使用  vscode  时只需下载备份的配置就可以了。</p></div><h3 id="使用-Settings-Sync-的备份配置的步骤"><a href="#使用-Settings-Sync-的备份配置的步骤" class="headerlink" title="使用 Settings Sync 的备份配置的步骤"></a>使用 Settings Sync 的备份配置的步骤</h3><ol><li><p>安装 Settings Sync 插件</p></li><li><p>来到 github，点击右上角的头像依次选择 <code>Settings &gt;&gt; Developer settings &gt;&gt; Personal access tokens &gt;&gt; Generate new token</code></p></li><li><p>在 <code>Note</code> 输入框中填入自己 token 名，滚动页面到 <code>gist</code> 在复选框打上勾</p></li><li><p>复制下面一串</p></li></ol><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-13_00-50-46.png"><ol start="5"><li>打开 vscode 找到 <code>settings sync界面</code> 点击</li></ol><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-13_00-27-21.png"><ol start="6"><li>复制刚刚生成的 token 码到下图，左下角出现的勾选说明保存完毕，通过快捷键 <code>Upload Key : Shift + Alt + U</code> 就可以上传到 <code>gist</code> 上</li></ol><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-13_00-27-41.png"><ol start="7"><li>在新电脑上下载安装 Settings Sync 插件之后，到 <code>gist</code> 上复制下面这一串到 <code>settings sync界面</code> 的 <code>gist ID</code> 的输入框中,通过快捷键 <code>Download Key : Shift + Alt + D</code> 就可以配置当前的 vscode<img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-13_00-36-59.png"></li></ol><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-13_00-38-25.png"><ol start="8"><li>假如下次再上传配置时候,插件可能会报错 <code>令牌无效或过期</code> 那就需要到 github 上获取 token 的地方重新点击 <code>Regenerate token</code> 的来重新获取的 token</li></ol><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/port/Snipaste_2019-09-14_18-49-31.png"><ol start="9"><li>回到 vscode 按键盘<code>shift + ctrl + p</code> 输入 <code>sync:</code> 依次点击 <code>sync高级选项 &gt;&gt; sync打开设置</code>  然后把刚刚复制的token输入进去即可，重新执行 <code>Shift + Alt + U</code></li></ol><div class="note info"><p style="font-weight:bold;">遇到的问题<pre><code>gist.github.com 被墙无法访问解决办法: windows下 打开C:\Windows\System32\drivers\etc\hosts文件,编辑器打开，在最后行添加 `192.30.253.118 gist.github.com` 保存。</code></pre></p></div>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note info&quot;&gt;&lt;p style=&quot;font-weight:bold;&quot;&gt;&lt;/p&gt;&lt;/div&gt;   --&gt;
    
    </summary>
    
      <category term="vscode" scheme="https://www.miaohanzhong.cn/categories/vscode/"/>
    
    
      <category term="插件" scheme="https://www.miaohanzhong.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>基于vuecli3.0脚手架项目工程的搭建</title>
    <link href="https://www.miaohanzhong.cn/%E5%9F%BA%E4%BA%8Evuecli3-0%E8%84%9A%E6%89%8B%E6%9E%B6%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B%E7%9A%84%E6%90%AD%E5%BB%BA.html"/>
    <id>https://www.miaohanzhong.cn/基于vuecli3-0脚手架项目工程的搭建.html</id>
    <published>2019-09-10T07:15:28.000Z</published>
    <updated>2019-09-17T15:56:29.729Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note info"><p style="font-weight:bold;"></p></div>   --><a id="more"></a><h3 id="文件目录展示"><a href="#文件目录展示" class="headerlink" title="文件目录展示"></a>文件目录展示</h3><img src="img/imglazyload.gif" data-original="https://makotobuto-img-1300004369.cos.ap-chengdu.myqcloud.com/carbon00.png" title="https://carbon.now.sh" width="850/">    <h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// book.js</span></span><br><span class="line"><span class="keyword">import</span> _axios <span class="keyword">from</span> <span class="string">"./index"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> book = <span class="function"><span class="params">params</span> =&gt;</span> _axios(<span class="string">"get"</span>, <span class="string">"/book/ebook"</span>, params);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建axios的一个实例</span></span><br><span class="line"><span class="keyword">var</span> instance = axios.create(&#123;</span><br><span class="line">  baseURL: process.env.VUE_APP_BASE_URL, <span class="comment">// 环境变量</span></span><br><span class="line">  timeout: <span class="number">6000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一、请求拦截器</span></span><br><span class="line">instance.interceptors.request.use(</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 对请求错误做些什么</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  二、响应拦截器</span></span><br><span class="line">instance.interceptors.response.use(</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response.data;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用es6的export default导出了一个函数，导出的函数代替axios去帮我们请求数据，</span></span><br><span class="line"><span class="comment"> * 函数的参数及返回值如下：</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; method  请求的方法：get、post、delete、put</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; url     请求的url:</span></span><br><span class="line"><span class="comment"> * @param &#123;Object&#125; data    请求的参数</span></span><br><span class="line"><span class="comment"> * @returns &#123;Promise&#125;     返回一个promise对象，其实就相当于axios请求数据的返回值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params">method, url, data = null</span>) </span>&#123;</span><br><span class="line">  method = method.toLowerCase();</span><br><span class="line">  <span class="keyword">if</span> (method == <span class="string">"post"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> instance.post(url, data);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == <span class="string">"get"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> instance.get(url, &#123; <span class="attr">params</span>: data &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == <span class="string">"delete"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> instance.delete(url, &#123; <span class="attr">params</span>: data &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == <span class="string">"put"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> instance.put(url, data);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">"未知的method"</span> + method);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; book &#125; <span class="keyword">from</span> <span class="string">'@/api/book'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'app'</span>,</span></span><br><span class="line">    mounted() &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.books()</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">async</span> books() &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//book()执行完,</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//book_info</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> book_info = <span class="keyword">await</span> book()</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(book_info);</span></span><br><span class="line"><span class="javascript">      <span class="comment">//2.2假设登录成功,返回的数据应该是 </span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//book_info=&#123;code:200,msg:'success',data:[]&#125;</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">// 等右边有返回值时，才会继续执行代码</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="components"><a href="#components" class="headerlink" title="components"></a>components</h4><ul><li>global/fa-button</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> faButton <span class="keyword">from</span> <span class="string">"./index.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> faButton;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>test component<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name:<span class="string">'faButton'</span> <span class="comment">// 全局注册的需要定义name值，作为组件的名字</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>index.js : 自动加载 <code>global</code> 目录下的 <code>.js</code> 结尾的文件, 来实现自动注册组件目的</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动加载 global 目录下的 .js 结尾的文件</span></span><br><span class="line"><span class="keyword">const</span> componentsContext = <span class="built_in">require</span>.context(<span class="string">'./global'</span>, <span class="literal">true</span>, /\.js$/)</span><br><span class="line"></span><br><span class="line">componentsContext.keys().forEach(<span class="function"><span class="params">component</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> componentConfig = componentsContext(component)</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 兼容 import export 和 require module.export 两种规范</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">const</span> ctrl = componentConfig.default || componentConfig</span><br><span class="line">  Vue.component(ctrl.name, ctrl)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'@/components'</span> <span class="comment">// 全局组件自动注册</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fa-button</span>&gt;</span><span class="tag">&lt;/<span class="name">fa-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="router"><a href="#router" class="headerlink" title="router"></a>router</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Home/index.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    path:<span class="string">'/'</span>,</span><br><span class="line">    redirect:<span class="string">'/home'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/home'</span>,</span><br><span class="line">    name: <span class="string">'home'</span>,</span><br><span class="line">     component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: "index" */</span> <span class="string">'@/views/Home'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(Router);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> routes = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动解析 ./ 目录下的 index.js 文件 自动引入该文件中</span></span><br><span class="line"><span class="keyword">const</span> routerContext = <span class="built_in">require</span>.context(<span class="string">"./"</span>, <span class="literal">true</span>, /index\.js$/);</span><br><span class="line">routerContext.keys().forEach(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 如果是根目录的 index.js 不处理</span></span><br><span class="line">  <span class="keyword">if</span>(route.startsWith(<span class="string">'./index'</span>))&#123;</span><br><span class="line">    <span class="keyword">return</span> </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> routerModule = routerContext(route)</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 兼容 import export 和 require module.export 两种规范</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  routes = [...routes,...(routerModule.default || routerModule)]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="store"><a href="#store" class="headerlink" title="store"></a>store</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// modules/book.js</span></span><br><span class="line"><span class="keyword">const</span> book = &#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    test: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    setTest: <span class="function">(<span class="params">&#123; commit, state &#125;, newTest</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> commit(<span class="string">"SET_TEST"</span>, newTest);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="string">'SET_TEST'</span>: <span class="function">(<span class="params">state, newTest</span>) =&gt;</span> &#123;</span><br><span class="line">      state.test = newTest;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    book: <span class="function"><span class="params">state</span> =&gt;</span> state.test</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> book</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">"vuex"</span>;</span><br><span class="line"><span class="keyword">import</span> book <span class="keyword">from</span> <span class="string">"./modules/book"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">   modules:&#123;</span><br><span class="line">     book</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 这样会写很多重复代码而且不方便维护，后面使用mixin的方法统一管理</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// import &#123; ebookMixin &#125; from '@/utils/mixin'</span></span></span><br><span class="line"><span class="javascript"> <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="javascript">  <span class="comment">// mixins: [ebookMixin], // mixin以当前代码进行混合，减少重复代码</span></span></span><br><span class="line">   computed: &#123;</span><br><span class="line"><span class="javascript">     ...mapGetters([<span class="string">'book'</span>]) </span></span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="javascript">    <span class="comment">// 提交参数10之后,返回的是promise对象, 来获取 book 的值</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">this</span>.setTest(<span class="number">10</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.book); <span class="comment">// 获取vuex中book的值</span></span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">   methods: &#123;</span><br><span class="line"><span class="javascript">     ...mapActions([<span class="string">'setTest'</span>]) <span class="comment">// 这样写就可以简化提交操作，这种提交vuex数据需要在methods中才能生效</span></span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//book.js 存放某个模块下的静态变量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> FONT_SIZE_LIST = [</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">12</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">14</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">16</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">18</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">20</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">22</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">fontSize</span>: <span class="number">24</span> &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><div class="note default"><p style="font-weight:bold;">npm install web-storage-cache -S</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// localStorage.js 引入第三方库(进行超时处理，序列化)</span></span><br><span class="line"><span class="keyword">import</span> Storage <span class="keyword">from</span> <span class="string">"web-storage-cache"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> localStorage = <span class="keyword">new</span> Storage();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setLocalStorage</span>(<span class="params">key, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> localStorage.set(key, value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getLocalStorage</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> localStorage.get(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">removeLocalStorage</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> localStorage.delete(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">clearLocalStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> localStorage.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * mixin.js 复用的方法放在 mixin 里，尽量让单个组件的代码精简 </span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; mapGetters, mapActions &#125; <span class="keyword">from</span> <span class="string">"vuex"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ebookMixin = &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([<span class="string">"book"</span>])</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapActions([<span class="string">'setTest'</span>])</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; FONT_SIZE_LIST &#125; <span class="keyword">from</span> <span class="string">'@/utils/book'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ebookMixin &#125; <span class="keyword">from</span> <span class="string">'@/utils/mixin'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; setLocalStorage &#125; <span class="keyword">from</span> <span class="string">'@/utils/localStorage'</span> <span class="comment">// localStorage引入第三方库</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'app'</span>,</span></span><br><span class="line"><span class="javascript">  mixins: [ebookMixin], <span class="comment">// mixin以当前代码进行混合，减少重复代码</span></span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      aFontSize: FONT_SIZE_LIST</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">   created() &#123;</span><br><span class="line"><span class="javascript">    setLocalStorage(<span class="string">'test'</span>, &#123; <span class="attr">name</span>: <span class="number">1</span> &#125;)</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mock"><a href="#mock" class="headerlink" title="mock"></a>mock</h4><div class="note default"><p style="font-weight:bold;">npm install mockjs -D </p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// book.js 存放数据文件</span></span><br><span class="line">  <span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  list:[</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"肖申克的救赎"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"狼性"</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"弟子规"</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// index.js </span></span><br><span class="line"><span class="keyword">import</span> Mock <span class="keyword">from</span> <span class="string">'mockjs'</span></span><br><span class="line"><span class="keyword">import</span> book <span class="keyword">from</span> <span class="string">'./book'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mock.mock(<span class="regexp">/\/book\/ebook/</span>,<span class="string">'get'</span>,book)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./mock'</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  i18n,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><h4 id="lang"><a href="#lang" class="headerlink" title="lang"></a>lang</h4><div class="note default"><p style="font-weight:bold;">npm install vue-i18n -S</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cn.js 存放数据文件</span></span><br><span class="line"><span class="keyword">const</span> messages = &#123;</span><br><span class="line">  home:&#123;</span><br><span class="line">    title:<span class="string">'书城'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  book:&#123;</span><br><span class="line">    title:<span class="string">'书名'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> messages</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// index.js </span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueI18N <span class="keyword">from</span> <span class="string">'vue-i18n'</span></span><br><span class="line"><span class="keyword">import</span> cn  <span class="keyword">from</span> <span class="string">'./cn'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueI18N)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> messages = &#123;</span><br><span class="line">   cn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> locale = <span class="string">'cn'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18N(&#123;</span><br><span class="line">  locale,</span><br><span class="line">  messages</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> i18n</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">'./lang'</span> <span class="comment">// 国际化</span></span><br><span class="line"> </span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  i18n,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>&#123;&#123;$t('home.title')&#125;&#125;<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span>|</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note info&quot;&gt;&lt;p style=&quot;font-weight:bold;&quot;&gt;&lt;/p&gt;&lt;/div&gt;   --&gt;
    
    </summary>
    
      <category term="前端" scheme="https://www.miaohanzhong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://www.miaohanzhong.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>工具函数</title>
    <link href="https://www.miaohanzhong.cn/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0.html"/>
    <id>https://www.miaohanzhong.cn/工具函数.html</id>
    <published>2019-08-08T05:06:13.000Z</published>
    <updated>2019-09-14T11:51:10.038Z</updated>
    
    <content type="html"><![CDATA[<!-- <div class="note info"><p style="font-weight:bold;"></p></div>   --><a id="more"></a><ul><li>字符串转数组对象</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串数据结构</span></span><br><span class="line"><span class="keyword">var</span> str =</span><br><span class="line">  <span class="string">'&#123;"fileId":20945,"folderId":1,"uploadId":1401,"name":"2019-7-10 10-25-49.JPG","urlName":"6a957d583561508.JPG"&#125;,&#123;"fileId":20952,"folderId":1,"uploadId":1409,"name":"Koala.jpg","urlName":"4b6981873d21c8e.jpg"&#125;,&#123;"fileId":20951,"folderId":1,"uploadId":1408,"name":"Koala.jpg","urlName":"e7a9380346ce52a.jpg"&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setAttachmentValue</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (data) &#123;</span><br><span class="line">    <span class="keyword">var</span> _dataStr = data</span><br><span class="line">      .substring(<span class="number">0</span>, data.length)</span><br><span class="line">      .replace(<span class="regexp">/&#125;,&#123;/g</span>, <span class="string">'&#125;,,&#123;'</span>)</span><br><span class="line">      .replace(<span class="regexp">/\[/g</span>, <span class="string">''</span>)</span><br><span class="line">      .replace(<span class="regexp">/\]/g</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span> (_dataStr.indexOf(<span class="string">',,'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">      data = _dataStr.split(<span class="string">',,'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> _array = <span class="keyword">new</span> <span class="built_in">Array</span>()</span><br><span class="line">      <span class="keyword">var</span> _objStr = _dataStr.replace(<span class="regexp">/\[/g</span>, <span class="string">''</span>).replace(<span class="regexp">/\]/g</span>, <span class="string">''</span>)</span><br><span class="line">      _array.push(_objStr)</span><br><span class="line">      data = _array</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> u = <span class="number">0</span>; u &lt; data.length; u++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (data[u] &amp;&amp; data[u].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> attachmentObj = <span class="built_in">JSON</span>.parse(data[u].substring(<span class="number">0</span>, data[u].length))</span><br><span class="line">        data[u] = attachmentObj</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;div class=&quot;note info&quot;&gt;&lt;p style=&quot;font-weight:bold;&quot;&gt;&lt;/p&gt;&lt;/div&gt;   --&gt;
    
    </summary>
    
      <category term="前端" scheme="https://www.miaohanzhong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="https://www.miaohanzhong.cn/tags/javascript/"/>
    
  </entry>
  
</feed>
